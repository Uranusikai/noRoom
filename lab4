/*

 * Lab4

 *

 * Created: 2/12/2020 4:28:29 PM

 * Author : sif16



#include <avr/io.h>

//** GLOBAL VARIABLES **

char sensorvalue = 0; // value read from analog sensor (0-1023)




//** FUNCTION DECLARATIONS **//



void wait(volatile int multiple, volatile char time_choice);



void delay_T_msec_timer0(char choice);




int main(void)

{

// Setup


  DDRC =  0b11011111;  // define all Port C bits as input.
  PORTC =  0xff;  // set all bits of PORTC high to turn off LEDs (assumes circuit is wired as active low)
  	PRR = 0x00;  // clear Power Reduction ADC bit (0) in PRR register
	ADCSRA = 1<<ADEN | 1<<ADPS2 | 1<<ADPS1 | 1<<ADPS0;  // 0x87 // 0b10000111 // Set ADC Enable bit (7) in ADCSRA register, and set ADC prescaler to 128 (bits 2-0 of ADCSRA = ADPS2-ADPS0 = 111)

	ADMUX = 0<<REFS1 | 1<<REFS0 | 1<<ADLAR; //0x60; // 0b01100000  // select Analog Reference voltage to be AVcc (bits 7-6 of ADMUX = 01),

						//left justification (bit 5 of ADMUX = ADLAR = 1);

						//and select channel 0 (bits 3-0 of ADMUX = MUX3-MUX0 = 000)

    

	while(1)

    {

    
	// Read analog input

	ADCSRA |= (1<<ADSC); // Start conversion

	while ((ADCSRA & (1<<ADIF)) ==0); // wait for conversion to finish
	sensorvalue = ADCH; // Keep high byte of 10-bit result (throw away lowest two bits)
  
	if ( sensorvalue <= 00101011)
  
  		PORTC = PORTC ^ 1 << PORTC0;	// an individual bit without changing the other bits in  PC0


  else if ( sensorvalue <= 01010110  && sensorvalue > 00101011)
  
  		PORTC = PORTC ^ 1 << PORTC1;	// an individual bit without changing the other bits in  PC0


  
  else if (sensorvalue <= 10000001 && sensorvalue > 01010110)
  
  		PORTC = PORTC ^ 1 << PORTC2;	// an individual bit without changing the other bits in  PC0

  
  else if (sensorvalue <= 10101101 && sensorvalue > 10000001)
  
  		PORTC = PORTC ^ 1 << PORTC3;	// an individual bit without changing the other bits in  PC0


  else if (sensorvalue <= 11011000 && sensorvalue > 10101101)
  
  		PORTC = PORTC ^ 1 << PORTC4;	// an individual bit without changing the other bits in  PC0


    } // end main while

} // end main

